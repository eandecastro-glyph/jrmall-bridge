{
  "service": {
    "service": "jrmall-bridge",
    "serviceObject": {
      "name": "jrmall-bridge"
    },
    "provider": {
      "name": "aws",
      "endpointType": "REGIONAL",
      "runtime": "nodejs14.x",
      "lambdaHashingVersion": "20201221",
      "environment": {
        "SECURITY_GROUP_ID": "sg-2b6dcd61",
        "SUBNET_ONE": "subnet-baaf4185",
        "SUBNET_TWO": "subnet-3c376210",
        "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
        "NAME": "jrmall-bridge",
        "PROJECT": "PHOENIX",
        "ENVIRONMENT": "STAGING",
        "APPLICATION_ROLE": "LAMBDA_MICRO",
        "MAIN_TABLE": "jrb_transactions_stg",
        "PRIMARY_KEY": "referenceId",
        "PHOENIX_API_SRC": "joyride",
        "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
        "PHOENIX_API_TAG": "joyride",
        "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
        "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
        "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
        "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
        "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
        "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
        "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
      },
      "vpc": {
        "securityGroupIds": [
          "sg-2b6dcd61"
        ],
        "subnetIds": [
          "subnet-baaf4185",
          "subnet-3c376210"
        ]
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:GetItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/jrb_transactions_stg"
        }
      ],
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ProductListLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jrmall-bridge-staging-productList"
            }
          },
          "PaymentUrlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jrmall-bridge-staging-paymentUrl"
            }
          },
          "StatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jrmall-bridge-staging-status"
            }
          },
          "OrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jrmall-bridge-staging-order"
            }
          },
          "VerifyMobileOperatorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jrmall-bridge-staging-verifyMobileOperator"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "jrmall-bridge",
                        "staging",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jrmall-bridge-staging*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jrmall-bridge-staging*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "jrmall-bridge",
                    "staging",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "ProductListLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z/jrmall-bridge.zip"
              },
              "Handler": "build.productList",
              "Runtime": "nodejs14.x",
              "FunctionName": "jrmall-bridge-staging-productList",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "SECURITY_GROUP_ID": "sg-2b6dcd61",
                  "SUBNET_ONE": "subnet-baaf4185",
                  "SUBNET_TWO": "subnet-3c376210",
                  "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
                  "NAME": "jrmall-bridge",
                  "PROJECT": "PHOENIX",
                  "ENVIRONMENT": "STAGING",
                  "APPLICATION_ROLE": "LAMBDA_MICRO",
                  "MAIN_TABLE": "jrb_transactions_stg",
                  "PRIMARY_KEY": "referenceId",
                  "PHOENIX_API_SRC": "joyride",
                  "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
                  "PHOENIX_API_TAG": "joyride",
                  "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
                  "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
                  "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
                  "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
                  "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
                  "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
                  "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "ProductListLogGroup"
            ]
          },
          "PaymentUrlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z/jrmall-bridge.zip"
              },
              "Handler": "build.createPaymentUrl",
              "Runtime": "nodejs14.x",
              "FunctionName": "jrmall-bridge-staging-paymentUrl",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "SECURITY_GROUP_ID": "sg-2b6dcd61",
                  "SUBNET_ONE": "subnet-baaf4185",
                  "SUBNET_TWO": "subnet-3c376210",
                  "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
                  "NAME": "jrmall-bridge",
                  "PROJECT": "PHOENIX",
                  "ENVIRONMENT": "STAGING",
                  "APPLICATION_ROLE": "LAMBDA_MICRO",
                  "MAIN_TABLE": "jrb_transactions_stg",
                  "PRIMARY_KEY": "referenceId",
                  "PHOENIX_API_SRC": "joyride",
                  "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
                  "PHOENIX_API_TAG": "joyride",
                  "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
                  "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
                  "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
                  "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
                  "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
                  "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
                  "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "PaymentUrlLogGroup"
            ]
          },
          "StatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z/jrmall-bridge.zip"
              },
              "Handler": "build.updateStatus",
              "Runtime": "nodejs14.x",
              "FunctionName": "jrmall-bridge-staging-status",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "SECURITY_GROUP_ID": "sg-2b6dcd61",
                  "SUBNET_ONE": "subnet-baaf4185",
                  "SUBNET_TWO": "subnet-3c376210",
                  "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
                  "NAME": "jrmall-bridge",
                  "PROJECT": "PHOENIX",
                  "ENVIRONMENT": "STAGING",
                  "APPLICATION_ROLE": "LAMBDA_MICRO",
                  "MAIN_TABLE": "jrb_transactions_stg",
                  "PRIMARY_KEY": "referenceId",
                  "PHOENIX_API_SRC": "joyride",
                  "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
                  "PHOENIX_API_TAG": "joyride",
                  "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
                  "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
                  "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
                  "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
                  "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
                  "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
                  "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "StatusLogGroup"
            ]
          },
          "OrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z/jrmall-bridge.zip"
              },
              "Handler": "build.getOrderDetails",
              "Runtime": "nodejs14.x",
              "FunctionName": "jrmall-bridge-staging-order",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "SECURITY_GROUP_ID": "sg-2b6dcd61",
                  "SUBNET_ONE": "subnet-baaf4185",
                  "SUBNET_TWO": "subnet-3c376210",
                  "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
                  "NAME": "jrmall-bridge",
                  "PROJECT": "PHOENIX",
                  "ENVIRONMENT": "STAGING",
                  "APPLICATION_ROLE": "LAMBDA_MICRO",
                  "MAIN_TABLE": "jrb_transactions_stg",
                  "PRIMARY_KEY": "referenceId",
                  "PHOENIX_API_SRC": "joyride",
                  "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
                  "PHOENIX_API_TAG": "joyride",
                  "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
                  "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
                  "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
                  "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
                  "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
                  "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
                  "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "OrderLogGroup"
            ]
          },
          "VerifyMobileOperatorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z/jrmall-bridge.zip"
              },
              "Handler": "build.verifyPrefix",
              "Runtime": "nodejs14.x",
              "FunctionName": "jrmall-bridge-staging-verifyMobileOperator",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "SECURITY_GROUP_ID": "sg-2b6dcd61",
                  "SUBNET_ONE": "subnet-baaf4185",
                  "SUBNET_TWO": "subnet-3c376210",
                  "SUBNET_THREE": "subnet-0e13c4e5e0b060e6e",
                  "NAME": "jrmall-bridge",
                  "PROJECT": "PHOENIX",
                  "ENVIRONMENT": "STAGING",
                  "APPLICATION_ROLE": "LAMBDA_MICRO",
                  "MAIN_TABLE": "jrb_transactions_stg",
                  "PRIMARY_KEY": "referenceId",
                  "PHOENIX_API_SRC": "joyride",
                  "PHOENIX_API_EMAIL": "jrdealer@yopmail.com",
                  "PHOENIX_API_TAG": "joyride",
                  "PHOENIX_API_SECRET": "bzS86llP81H.Q5b9gOBeSY0D-?hyr6+6V6plhv?SC@b.e#!@?*qYoBoCsitWm4E",
                  "PHOENIX_API_KEY": "gu21ww_6bggrpK4c-RLo4oc!@AY3h?_gABvaWT4X59zq8=gi9RgXVFqBmH9vEOh#",
                  "PHOENIX_API_URL": "https://stg-api.phoenixph.com/api/",
                  "SELLER_ID": "0fd99077-df82-441f-b7d4-cf0b892e6936",
                  "PHOENIX_STG_PAYMENT": "https://us-central1-cignal-273002.cloudfunctions.net/paygate-jrms-create",
                  "PHOENIX_STG_EMAIL_JRMALL": "https://nwluzav4p1.execute-api.us-east-1.amazonaws.com/dev/email/",
                  "PHOENIX_STG_PREFIX_MICRO": "https://kbz20njm79.execute-api.us-east-1.amazonaws.com/staging/msisdn/verify/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "VerifyMobileOperatorLogGroup"
            ]
          },
          "ProductListLambdaVersiont5X91V9Crkl6mG1718RRCm4vbmXCYabRgdM6nqnyG4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProductListLambdaFunction"
              },
              "CodeSha256": "9b8iqI+8TA60jI32Dy5r3hNHnESS/7zDxQo6KIbGYto="
            }
          },
          "PaymentUrlLambdaVersion24u9209B4f7aTY0MF7P1KqzDA5SKYOXmY21sENS89w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PaymentUrlLambdaFunction"
              },
              "CodeSha256": "9b8iqI+8TA60jI32Dy5r3hNHnESS/7zDxQo6KIbGYto="
            }
          },
          "StatusLambdaVersionRgfdfwqrZAUGa999lw0AmtCzSME7SBOS3kCvF9JZds": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StatusLambdaFunction"
              },
              "CodeSha256": "9b8iqI+8TA60jI32Dy5r3hNHnESS/7zDxQo6KIbGYto="
            }
          },
          "OrderLambdaVersionsYPgEfoRAog5zaC8XFibnsMjqsnRZmzjsyq7nMh0FdY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OrderLambdaFunction"
              },
              "CodeSha256": "9b8iqI+8TA60jI32Dy5r3hNHnESS/7zDxQo6KIbGYto="
            }
          },
          "VerifyMobileOperatorLambdaVersionahyBMBTbZjnBSo5Ih42Z5Nejlwh7tUgRlWy6jBidir8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifyMobileOperatorLambdaFunction"
              },
              "CodeSha256": "9b8iqI+8TA60jI32Dy5r3hNHnESS/7zDxQo6KIbGYto="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "staging-jrmall-bridge",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceJrmall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "jrmall",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallProducts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmall"
              },
              "PathPart": "products",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallPayment": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmall"
              },
              "PathPart": "payment",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmall"
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallOrder": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmall"
              },
              "PathPart": "order",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallOrderReferenceidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmallOrder"
              },
              "PathPart": "{referenceId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallVerify": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmall"
              },
              "PathPart": "verify",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceJrmallVerifyMobilenumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceJrmallVerify"
              },
              "PathPart": "{mobileNumber}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodJrmallPaymentOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallPayment"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodJrmallStatusOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodJrmallOrderReferenceidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallOrderReferenceidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodJrmallVerifyMobilenumberVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallVerifyMobilenumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodJrmallProductsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallProducts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductListLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ProductListLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodJrmallPaymentPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallPayment"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PaymentUrlLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodJrmallStatusPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "StatusLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodJrmallOrderReferenceidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallOrderReferenceidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "OrderLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodJrmallVerifyMobilenumberVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceJrmallVerifyMobilenumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "VerifyMobileOperatorLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "VerifyMobileOperatorLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1626843920863": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "staging"
            },
            "DependsOn": [
              "ApiGatewayMethodJrmallPaymentOptions",
              "ApiGatewayMethodJrmallStatusOptions",
              "ApiGatewayMethodJrmallOrderReferenceidVarOptions",
              "ApiGatewayMethodJrmallVerifyMobilenumberVarOptions",
              "ApiGatewayMethodJrmallProductsGet",
              "ApiGatewayMethodJrmallPaymentPost",
              "ApiGatewayMethodJrmallStatusPut",
              "ApiGatewayMethodJrmallOrderReferenceidVarGet",
              "ApiGatewayMethodJrmallVerifyMobilenumberVarGet"
            ]
          },
          "ProductListLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProductListLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PaymentUrlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PaymentUrlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "VerifyMobileOperatorLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "VerifyMobileOperatorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-ServerlessDeploymentBucketName"
            }
          },
          "ProductListLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProductListLambdaVersiont5X91V9Crkl6mG1718RRCm4vbmXCYabRgdM6nqnyG4"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-ProductListLambdaFunctionQualifiedArn"
            }
          },
          "PaymentUrlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PaymentUrlLambdaVersion24u9209B4f7aTY0MF7P1KqzDA5SKYOXmY21sENS89w"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-PaymentUrlLambdaFunctionQualifiedArn"
            }
          },
          "StatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StatusLambdaVersionRgfdfwqrZAUGa999lw0AmtCzSME7SBOS3kCvF9JZds"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-StatusLambdaFunctionQualifiedArn"
            }
          },
          "OrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OrderLambdaVersionsYPgEfoRAog5zaC8XFibnsMjqsnRZmzjsyq7nMh0FdY"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-OrderLambdaFunctionQualifiedArn"
            }
          },
          "VerifyMobileOperatorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifyMobileOperatorLambdaVersionahyBMBTbZjnBSo5Ih42Z5Nejlwh7tUgRlWy6jBidir8"
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-VerifyMobileOperatorLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/staging"
                ]
              ]
            },
            "Export": {
              "Name": "sls-jrmall-bridge-staging-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "stage": "staging",
      "prune": {
        "automatic": true,
        "number": 10
      }
    },
    "plugins": [
      "serverless-prune-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "productList": {
        "handler": "build.productList",
        "timeout": 30,
        "events": [
          {
            "http": {
              "path": "jrmall/products",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jrmall-bridge-staging-productList",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ProductListLambdaVersiont5X91V9Crkl6mG1718RRCm4vbmXCYabRgdM6nqnyG4"
      },
      "paymentUrl": {
        "handler": "build.createPaymentUrl",
        "timeout": 30,
        "events": [
          {
            "http": {
              "path": "jrmall/payment",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jrmall-bridge-staging-paymentUrl",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PaymentUrlLambdaVersion24u9209B4f7aTY0MF7P1KqzDA5SKYOXmY21sENS89w"
      },
      "status": {
        "handler": "build.updateStatus",
        "timeout": 30,
        "events": [
          {
            "http": {
              "path": "jrmall/status",
              "method": "put",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jrmall-bridge-staging-status",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "StatusLambdaVersionRgfdfwqrZAUGa999lw0AmtCzSME7SBOS3kCvF9JZds"
      },
      "order": {
        "handler": "build.getOrderDetails",
        "timeout": 30,
        "events": [
          {
            "http": {
              "path": "jrmall/order/{referenceId}",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jrmall-bridge-staging-order",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "OrderLambdaVersionsYPgEfoRAog5zaC8XFibnsMjqsnRZmzjsyq7nMh0FdY"
      },
      "verifyMobileOperator": {
        "handler": "build.verifyPrefix",
        "timeout": 30,
        "events": [
          {
            "http": {
              "path": "jrmall/verify/{mobileNumber}",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jrmall-bridge-staging-verifyMobileOperator",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "VerifyMobileOperatorLambdaVersionahyBMBTbZjnBSo5Ih42Z5Nejlwh7tUgRlWy6jBidir8"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "variablesResolutionMode": "20210119",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/ean/Documents/Glyph Repos/backend/jrmall-bridge/.serverless/jrmall-bridge.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/jrmall-bridge/staging/1626843934200-2021-07-21T05:05:34.200Z",
    "artifact": "jrmall-bridge.zip"
  }
}